# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: service.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='service.proto',
  package='VIO.Api.ServiceRpc',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n\rservice.proto\x12\x12VIO.Api.ServiceRpc\x1a\x0c\x63ommon.proto2\xa5\x01\n\x03Rpc\x12R\n\x12\x43heckCommunication\x12\x1b.VIO.Api.Common.ProtoString\x1a\x1f.VIO.Api.Common.CommandFeedback\x12J\n\rGetSuperPoint\x12\x1b.VIO.Api.Common.ProtoString\x1a\x1c.VIO.Api.Common.PointCloudXYb\x06proto3'
  ,
  dependencies=[common__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_RPC = _descriptor.ServiceDescriptor(
  name='Rpc',
  full_name='VIO.Api.ServiceRpc.Rpc',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=52,
  serialized_end=217,
  methods=[
  _descriptor.MethodDescriptor(
    name='CheckCommunication',
    full_name='VIO.Api.ServiceRpc.Rpc.CheckCommunication',
    index=0,
    containing_service=None,
    input_type=common__pb2._PROTOSTRING,
    output_type=common__pb2._COMMANDFEEDBACK,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetSuperPoint',
    full_name='VIO.Api.ServiceRpc.Rpc.GetSuperPoint',
    index=1,
    containing_service=None,
    input_type=common__pb2._PROTOSTRING,
    output_type=common__pb2._POINTCLOUDXY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_RPC)

DESCRIPTOR.services_by_name['Rpc'] = _RPC

# @@protoc_insertion_point(module_scope)
